<Window x:Class="Multiple_File_Rename.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:local="clr-namespace:Multiple_File_Rename"
        xmlns:enum="clr-namespace:Multiple_File_Rename.ViewModel.Enum"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Multiple files rename tool" Height="450" Width="800"
        DataContext="{Binding Main, Source={StaticResource Locator}}">

    <Window.Resources>
        <ResourceDictionary>
            <ObjectDataProvider x:Key="ChangeFunctionEnum" MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enum:ChangeFunctionEnum"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" False="Collapsed" True="Visible" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Multiple_File_Rename;component/Style/MyStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid  Style="{StaticResource MainGridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>
        
        <DockPanel Margin="-5,-5,-5,5">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_Windows">
                    <MenuItem Header="_Setting" />
                </MenuItem>
            </Menu>
        </DockPanel>
        
        <Grid Name="FunctionGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <ComboBox Name="FunctionType" HorizontalAlignment="Left" VerticalAlignment="Top" ItemsSource="{Binding Source={StaticResource ChangeFunctionEnum}}" SelectedValue="{Binding CurrentStatus}" SelectedValuePath="Value" Width="70">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <command:EventToCommand Command="{Binding FunctionTypeSelected}"
                                            PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Loaded">
                        <command:EventToCommand Command="{Binding FunctionTypeSelected}"
                                            PassEventArgsToCommand="True" CommandParameter="{Binding Path=this.DateContext}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <Button Margin="5 0 0 0" Content="Browse" Grid.Column="1" HorizontalAlignment="Left" Command="{Binding BrowseCommand}"></Button>
        </Grid>

        <Grid Name="ReplaceGrid" Grid.ColumnSpan="2" Grid.Row="2" Margin="0 5 0 0" Visibility="{Binding IsShowReplace,Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled="{Binding IsBrowsed}">
            <Grid.Resources>
                <ResourceDictionary>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="2"></Setter>
                    </Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                    </Style>
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Find:"></TextBlock>
            <TextBlock Grid.Row="1" Text="Replace:" Width="50"></TextBlock>
            <TextBox Grid.Column="1" Text="{Binding FindText ,Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyUp">
                        <command:EventToCommand Command="{Binding FindTextKeyUp}"
                                            PassEventArgsToCommand="True" CommandParameter="{Binding Path=this.DateContext}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding ReplaceText ,Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyUp">
                        <command:EventToCommand Command="{Binding ReplaceTextKeyUp}"
                                            PassEventArgsToCommand="True" CommandParameter="{Binding Path=this.DateContext}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Grid>
        <!--Hadn't Finish so put IsEnabled="False"-->
        <Grid Grid.Row="2" IsEnabled="False" Name="AddGrid" Visibility="{Binding IsShowAdd, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.Resources>
                <ResourceDictionary>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="2"></Setter>
                    </Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                    </Style>
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Add:"></TextBlock>
            <TextBox Grid.Column="1" Text="{Binding AddText ,Mode=TwoWay}"></TextBox>
        </Grid>
        <!--Hadn't Finish so put IsEnabled="False"-->
        <Grid IsEnabled="False" Name="InsertGrid" Grid.ColumnSpan="2" Grid.Row="2" Margin="0 5 0 0" Visibility="{Binding IsShowInsert,Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.Resources>
                <ResourceDictionary>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="2"></Setter>
                    </Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                    </Style>
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Index:"></TextBlock>
            <TextBlock Grid.Row="1" Text="Insert:" Width="50"></TextBlock>
            <TextBox Grid.Column="1" Text="{Binding IndexText ,Mode=TwoWay}"></TextBox>
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding InsertText ,Mode=TwoWay}"></TextBox>
        </Grid>

        <Grid Grid.Row="3" Name="PreviewGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <ListBox ItemsSource="{Binding FilesnameList}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding}" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ListBox Grid.Column="1" ItemsSource="{Binding ChangedFilesnameList}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding}" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        
        <Button Grid.Row="4" Content="Confirm" Command="{Binding ConfirmCommand}"></Button>
    </Grid>
</Window>
